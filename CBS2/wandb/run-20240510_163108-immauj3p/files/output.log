---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 78 to 225, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 103 to 21, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 103 to 21, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 127 to 87, weather 10 =========
[1m> Setting up the agent
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 127 to 87, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 19 to 103, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 19 to 103, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 230 to 210, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 230 to 210, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 250 to 190, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 250 to 190, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 220 to 118, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 220 to 118, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 200 to 224, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 11 to 17, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 11 to 17, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 78 to 245, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 78 to 245, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 3 to 175, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 3 to 175, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 92 to 112, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 92 to 112, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 233 to 238, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 233 to 238, weather 14 =========
[1m> Setting up the agent
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 4 to 54, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 4 to 54, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 17 to 205, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 17 to 205, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 221 to 210, weather 10 =========
[1m> Setting up the agent
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 221 to 210, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 152 to 84, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 152 to 84, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 185 to 121, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 185 to 121, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 127 to 56, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 127 to 56, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 112 to 6, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 112 to 6, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 40 to 190, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 40 to 190, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 174 to 121, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 174 to 121, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 119 to 185, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 236 to 223, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 236 to 223, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 217 to 152, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Empty: 217 to 152, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 78 to 225, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 78 to 225, weather 14 =========
[1m> Setting up the agent
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 103 to 21, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 103 to 21, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 127 to 87, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 127 to 87, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 19 to 103, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 230 to 210, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 230 to 210, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 250 to 190, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 250 to 190, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 220 to 118, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 220 to 118, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 200 to 224, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 200 to 224, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 11 to 17, weather 10 =========
[1m> Setting up the agent
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 11 to 17, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 78 to 245, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 78 to 245, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 3 to 175, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 3 to 175, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 92 to 112, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 92 to 112, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 233 to 238, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 233 to 238, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 4 to 54, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 17 to 205, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 17 to 205, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 221 to 210, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 221 to 210, weather 14 =========
[1m> Setting up the agent
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 152 to 84, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 152 to 84, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 185 to 121, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 185 to 121, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 127 to 56, weather 10 =========
[1m> Setting up the agent
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 127 to 56, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 112 to 6, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 112 to 6, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 40 to 190, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 40 to 190, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 174 to 121, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 174 to 121, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 119 to 185, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 119 to 185, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 236 to 223, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 217 to 152, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Regular: 217 to 152, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 78 to 225, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 78 to 225, weather 14 =========
[1m> Setting up the agent
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 103 to 21, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 103 to 21, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 127 to 87, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 127 to 87, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 19 to 103, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 19 to 103, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 230 to 210, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 230 to 210, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 250 to 190, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 250 to 190, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 220 to 118, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 220 to 118, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 200 to 224, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 200 to 224, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 11 to 17, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 11 to 17, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 78 to 245, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 78 to 245, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 3 to 175, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 3 to 175, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 92 to 112, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 92 to 112, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 233 to 238, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 233 to 238, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 4 to 54, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 4 to 54, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 17 to 205, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 17 to 205, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 221 to 210, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 221 to 210, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 152 to 84, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 152 to 84, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 185 to 121, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 185 to 121, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 127 to 56, weather 10 =========
[1m> Setting up the agent
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 127 to 56, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 112 to 6, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 112 to 6, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 40 to 190, weather 10 =========
[1m> Setting up the agent
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 40 to 190, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 174 to 121, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 174 to 121, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 119 to 185, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 119 to 185, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 236 to 223, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 236 to 223, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 217 to 152, weather 10 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m========= Preparing Town01 Dense: 217 to 152, weather 14 =========
[1m> Setting up the agent
---------------------WITH PPM-----------------------
[91mCould not set up the required agent:
[91m> Error(s) in loading state_dict for ImagePolicyModelSS:
[91m	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var". 
[91m	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
[91m	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
[91m	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
[91m	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
[91m	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
[91m	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
[91m	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
[91m	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
[91m	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
[91m	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
[91m	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).
[1m> Registering the global statistics
Traceback (most recent call last):
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/nocrash_evaluator.py", line 239, in _load_and_run_scenario
    self.agent_instance = getattr(self.module_agent, agent_class_name)(args.agent_config)
  File "/home/fhoekstra/CBS2/leaderboard/leaderboard/autoagents/autonomous_agent.py", line 45, in __init__
    self.setup(path_to_conf_file)
  File "autoagents/cbs2_agent.py", line 82, in setup
    self.model.load_state_dict(torch.load(self.rgb_model_dir))
  File "/home/fhoekstra/miniconda3/envs/cbs2/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for ImagePolicyModelSS:
	Missing key(s) in state_dict: "conv.layer1.0.conv3.weight", "conv.layer1.0.bn3.weight", "conv.layer1.0.bn3.bias", "conv.layer1.0.bn3.running_mean", "conv.layer1.0.bn3.running_var", "conv.layer1.0.downsample.0.weight", "conv.layer1.0.downsample.1.weight", "conv.layer1.0.downsample.1.bias", "conv.layer1.0.downsample.1.running_mean", "conv.layer1.0.downsample.1.running_var", "conv.layer1.1.conv3.weight", "conv.layer1.1.bn3.weight", "conv.layer1.1.bn3.bias", "conv.layer1.1.bn3.running_mean", "conv.layer1.1.bn3.running_var", "conv.layer1.2.conv3.weight", "conv.layer1.2.bn3.weight", "conv.layer1.2.bn3.bias", "conv.layer1.2.bn3.running_mean", "conv.layer1.2.bn3.running_var", "conv.layer2.0.conv3.weight", "conv.layer2.0.bn3.weight", "conv.layer2.0.bn3.bias", "conv.layer2.0.bn3.running_mean", "conv.layer2.0.bn3.running_var", "conv.layer2.1.conv3.weight", "conv.layer2.1.bn3.weight", "conv.layer2.1.bn3.bias", "conv.layer2.1.bn3.running_mean", "conv.layer2.1.bn3.running_var", "conv.layer2.2.conv3.weight", "conv.layer2.2.bn3.weight", "conv.layer2.2.bn3.bias", "conv.layer2.2.bn3.running_mean", "conv.layer2.2.bn3.running_var", "conv.layer2.3.conv3.weight", "conv.layer2.3.bn3.weight", "conv.layer2.3.bn3.bias", "conv.layer2.3.bn3.running_mean", "conv.layer2.3.bn3.running_var", "conv.layer3.0.conv3.weight", "conv.layer3.0.bn3.weight", "conv.layer3.0.bn3.bias", "conv.layer3.0.bn3.running_mean", "conv.layer3.0.bn3.running_var", "conv.layer3.1.conv3.weight", "conv.layer3.1.bn3.weight", "conv.layer3.1.bn3.bias", "conv.layer3.1.bn3.running_mean", "conv.layer3.1.bn3.running_var", "conv.layer3.2.conv3.weight", "conv.layer3.2.bn3.weight", "conv.layer3.2.bn3.bias", "conv.layer3.2.bn3.running_mean", "conv.layer3.2.bn3.running_var", "conv.layer3.3.conv3.weight", "conv.layer3.3.bn3.weight", "conv.layer3.3.bn3.bias", "conv.layer3.3.bn3.running_mean", "conv.layer3.3.bn3.running_var", "conv.layer3.4.conv3.weight", "conv.layer3.4.bn3.weight", "conv.layer3.4.bn3.bias", "conv.layer3.4.bn3.running_mean", "conv.layer3.4.bn3.running_var", "conv.layer3.5.conv3.weight", "conv.layer3.5.bn3.weight", "conv.layer3.5.bn3.bias", "conv.layer3.5.bn3.running_mean", "conv.layer3.5.bn3.running_var", "conv.layer4.0.conv3.weight", "conv.layer4.0.bn3.weight", "conv.layer4.0.bn3.bias", "conv.layer4.0.bn3.running_mean", "conv.layer4.0.bn3.running_var", "conv.layer4.1.conv3.weight", "conv.layer4.1.bn3.weight", "conv.layer4.1.bn3.bias", "conv.layer4.1.bn3.running_mean", "conv.layer4.1.bn3.running_var", "conv.layer4.2.conv3.weight", "conv.layer4.2.bn3.weight", "conv.layer4.2.bn3.bias", "conv.layer4.2.bn3.running_mean", "conv.layer4.2.bn3.running_var", "post_conv.reduce.0.weight", "post_conv.reduce.1.weight", "post_conv.reduce.1.bias", "post_conv.reduce.1.running_mean", "post_conv.reduce.1.running_var".
	size mismatch for conv.layer1.0.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 1, 1]).
	size mismatch for conv.layer1.1.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer1.2.conv1.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 256, 1, 1]).
	size mismatch for conv.layer2.0.conv1.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.0.weight: copying a param with shape torch.Size([128, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 256, 1, 1]).
	size mismatch for conv.layer2.0.downsample.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.0.downsample.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for conv.layer2.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.2.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer2.3.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 512, 1, 1]).
	size mismatch for conv.layer3.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.0.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([1024, 512, 1, 1]).
	size mismatch for conv.layer3.0.downsample.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.0.downsample.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([1024]).
	size mismatch for conv.layer3.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.2.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.3.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.4.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer3.5.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 1024, 1, 1]).
	size mismatch for conv.layer4.0.conv1.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.0.weight: copying a param with shape torch.Size([512, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([2048, 1024, 1, 1]).
	size mismatch for conv.layer4.0.downsample.1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.0.downsample.1.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([2048]).
	size mismatch for conv.layer4.1.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.layer4.2.conv1.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for conv.fc.weight: copying a param with shape torch.Size([1000, 512]) from checkpoint, the shape in current model is torch.Size([1000, 2048]).
	size mismatch for ppm.features.0.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.0.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.0.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.1.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.1.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.2.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.2.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.1.weight: copying a param with shape torch.Size([128, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([512, 2048, 1, 1]).
	size mismatch for ppm.features.3.2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for ppm.features.3.2.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for deconv.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.0.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([2176]).
	size mismatch for deconv.1.weight: copying a param with shape torch.Size([1152, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([2176, 256, 3, 3]).